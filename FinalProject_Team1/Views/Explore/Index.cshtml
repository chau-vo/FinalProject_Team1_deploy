@model IEnumerable<FinalProject_Team1.Models.Book>

@{
    ViewData["Title"] = "Explore Books";
}

<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<style>
    body {
        font-family: 'Poppins', sans-serif;
        background-color: #f8f9fa;
    }
    
    .dashboard-header {
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        color: white;
        padding: 2rem;
        border-radius: 10px;
        margin-bottom: 2rem;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }
    
    .book-card {
        border-radius: 15px;
        overflow: hidden;
        transition: all 0.3s ease;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.08);
        height: 100%;
        background-color: white;
        margin-bottom: 1.5rem;
    }
    
    .book-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.12);
    }
    
    .book-card .card-img-top {
        height: 200px;
        object-fit: cover;
        background: linear-gradient(135deg, #f6d365 0%, #fda085 100%);
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .book-card .card-img-top i {
        font-size: 4rem;
        color: white;
    }
    
    .book-card .card-body {
        padding: 1.5rem;
    }
    
    .book-card .card-title {
        font-weight: 600;
        margin-bottom: 0.5rem;
        font-size: 1.2rem;
        color: #333;
    }
    
    .book-card .card-text {
        color: #6c757d;
        font-size: 0.9rem;
    }
    
    .book-card .badge {
        font-size: 0.8rem;
        font-weight: 500;
        padding: 0.5rem 0.8rem;
        margin-right: 0.5rem;
        margin-bottom: 0.5rem;
        border-radius: 50px;
    }
    
    .book-card .card-footer {
        background-color: white;
        border-top: 1px solid rgba(0, 0, 0, 0.05);
        padding: 1rem 1.5rem;
    }
    
    .action-btn {
        border-radius: 50px;
        padding: 0.4rem 1rem;
        font-size: 0.85rem;
        font-weight: 500;
        margin-right: 0.5rem;
        transition: all 0.2s ease;
    }
    
    .action-btn:hover {
        transform: translateY(-2px);
    }
    
    .action-btn i {
        margin-right: 0.3rem;
    }
    
    .btn-primary {
        background: linear-gradient(135deg, #4e73df 0%, #224abe 100%);
        border: none;
    }
    
    .btn-info {
        background: linear-gradient(135deg, #36b9cc 0%, #258391 100%);
        border: none;
    }
    
    .btn-danger {
        background: linear-gradient(135deg, #e74a3b 0%, #be2617 100%);
        border: none;
    }
    
    .btn-success {
        background: linear-gradient(135deg, #1cc88a 0%, #13855c 100%);
        border: none;
    }
    
    .search-bar {
        border-radius: 50px;
        padding: 0.8rem 1.5rem;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
        border: none;
        margin-bottom: 2rem;
    }
    
    .alert {
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
    }
    
    .pagination .page-item .page-link {
        border-radius: 50px;
        margin: 0 0.2rem;
        color: #4e73df;
    }
    
    .pagination .page-item.active .page-link {
        background: linear-gradient(135deg, #4e73df 0%, #224abe 100%);
        border: none;
    }
</style>

<div class="container mt-4">
    <div class="dashboard-header">
        <h1 class="mb-2">Explore Books</h1>
        <p class="lead mb-0">Discover and manage your book collection</p>
    </div>

    @if (ViewBag.DatabaseError != null)
    {
        <div class="alert alert-danger">
            <h4>Database Error</h4>
            <p>@ViewBag.DatabaseError</p>
        </div>
    }
    else if (ViewBag.UsingSampleData != null && ViewBag.UsingSampleData)
    {
        <div class="alert alert-info">
            <h4>Using Sample Data</h4>
            <p>This page is currently displaying sample data instead of querying the database.</p>
            <p>This was done to ensure the page loads quickly while database connection issues are being resolved.</p>
        </div>
    }

    <div class="row mb-4">
        <div class="col-md-8">
            <input type="text" class="form-control search-bar" placeholder="Search for books, authors, or subjects..." id="searchInput">
        </div>
        <div class="col-md-4 text-right">
            <a asp-action="Create" class="btn btn-success action-btn"><i class="fas fa-plus"></i> Add New Book</a>
        </div>
    </div>

    <div class="row" id="booksContainer">
        @foreach (var item in Model)
        {
            <div class="col-md-4 mb-4 book-item">
                <div class="book-card">
                    <div class="card-img-top">
                        @if (!string.IsNullOrEmpty(item.CoverUrl))
                        {
                            <img src="@item.CoverUrl" alt="@item.Title" class="img-fluid" style="height: 100%; width: 100%; object-fit: cover;">
                        }
                        else
                        {
                            <i class="fas fa-book"></i>
                        }
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">@item.Title</h5>
                        <p class="card-text">
                            <small class="text-muted">
                                ISBN: @item.ISBN13
                                <br>
                                Published: @(item.PublishDate.HasValue ? item.PublishDate.Value.ToString("yyyy-MM-dd") : "Unknown")
                                <br>
                                Pages: @(item.NumberOfPages.HasValue ? item.NumberOfPages.Value.ToString() : "Unknown")
                            </small>
                        </p>
                        
                        @if (item.BookAuthors != null && item.BookAuthors.Any())
                        {
                            <div class="mb-2">
                                @foreach (var bookAuthor in item.BookAuthors)
                                {
                                    <span class="badge bg-primary">@bookAuthor.Author?.Name</span>
                                }
                            </div>
                        }
                        
                        @if (item.BookSubjects != null && item.BookSubjects.Any())
                        {
                            <div>
                                @foreach (var bookSubject in item.BookSubjects)
                                {
                                    <span class="badge bg-info">@bookSubject.Subject?.Name</span>
                                }
                            </div>
                        }
                    </div>
                    <div class="card-footer">
                        <a asp-action="Details" asp-route-id="@item.BookId" class="btn btn-info action-btn"><i class="fas fa-info-circle"></i> Details</a>
                        <a asp-action="Edit" asp-route-id="@item.BookId" class="btn btn-primary action-btn"><i class="fas fa-edit"></i> Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.BookId" class="btn btn-danger action-btn"><i class="fas fa-trash"></i> Delete</a>
                    </div>
                </div>
            </div>
        }
    </div>
    
    @if (!Model.Any())
    {
        <div class="alert alert-warning">
            <h4>No Books Found</h4>
            <p>Your library is empty. Add some books to get started!</p>
        </div>
    }
</div>

@section Scripts {
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <script>
        $(document).ready(function() {
            // Simple search functionality
            $("#searchInput").on("keyup", function() {
                var value = $(this).val().toLowerCase();
                $(".book-item").filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
    </script>
}
